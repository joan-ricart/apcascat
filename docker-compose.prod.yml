services:
  app:
    build:
      context: .
      args:
        APP_ENV: production
    # Remove host volume mount for code in production
    volumes:
      - vendor_data:/app/vendor
      - caddy_data:/data
      - caddy_config:/config
    environment:
      # IMPORTANT: CHANGE THIS TO YOUR ACTUAL DOMAIN FOR PRODUCTION
      SERVER_NAME: "yourdomain.com"
      # Enable auto HTTPS for production
      CADDY_GLOBAL_OPTIONS: "auto_https"
      # Other production environment variables should be managed securely on the VPS
      # e.g., QUEUE_CONNECTION, REDIS_HOST, DB_DATABASE, DB_USERNAME, DB_PASSWORD, APP_KEY
      # These should be set directly on the VPS or via a secrets management system.
      # For now, we'll assume they are set in the environment where docker compose is run.
      QUEUE_CONNECTION: ${QUEUE_CONNECTION}
      REDIS_HOST: ${REDIS_HOST}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      APP_KEY: ${APP_KEY} # IMPORTANT: Set your actual app key

  worker:
    build:
      context: .
      args:
        APP_ENV: production
    # Remove host volume mount for code in production
    volumes:
      - vendor_data:/app/vendor
    environment:
      QUEUE_CONNECTION: ${QUEUE_CONNECTION}
      REDIS_HOST: ${REDIS_HOST}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      APP_KEY: ${APP_KEY}

  # The adminer service is not included here, so it won't be started in production.

# Volumes are defined in the base docker-compose.yml, no need to redefine here
# unless you want production-specific volume configurations.
